"""Add user profiles tables

Revision ID: 001
Revises: 
Create Date: 2024-01-01 00:00:00.000000

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '001'
down_revision = None
branch_labels = None
depends_on = None

def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    
    # Crear tabla users_profiles
    op.create_table('users_profiles',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('uid', sa.String(length=128), nullable=False),
        sa.Column('alias', sa.String(length=30), nullable=False),
        sa.Column('name', sa.String(length=100), nullable=False),
        sa.Column('age', sa.Integer(), nullable=True),
        sa.Column('gender', sa.String(length=20), nullable=True),
        sa.Column('location', sa.String(length=20), nullable=True),
        sa.Column('phrase', sa.String(length=200), nullable=True),
        sa.Column('about_me', sa.Text(), nullable=True),
        sa.Column('interests', sa.Text(), nullable=True),
        sa.Column('avatar_url', sa.String(length=500), nullable=True),
        sa.Column('avatar_type', sa.String(length=10), nullable=True),
        sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
        sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
        sa.PrimaryKeyConstraint('id')
    )
    
    # Crear tabla user_privacy_settings
    op.create_table('user_privacy_settings',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('user_id', sa.Integer(), nullable=False),
        sa.Column('name_public', sa.Boolean(), nullable=False),
        sa.Column('age_public', sa.Boolean(), nullable=False),
        sa.Column('gender_public', sa.Boolean(), nullable=False),
        sa.Column('location_public', sa.Boolean(), nullable=False),
        sa.Column('phrase_public', sa.Boolean(), nullable=False),
        sa.Column('about_me_public', sa.Boolean(), nullable=False),
        sa.Column('interests_public', sa.Boolean(), nullable=False),
        sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
        sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
        sa.PrimaryKeyConstraint('id')
    )
    
    # Crear tabla user_purchases
    op.create_table('user_purchases',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('user_id', sa.Integer(), nullable=False),
        sa.Column('purchase_type', sa.String(length=20), nullable=False),
        sa.Column('amount', sa.Numeric(precision=10, scale=2), nullable=False),
        sa.Column('currency', sa.String(length=3), nullable=False),
        sa.Column('status', sa.String(length=20), nullable=False),
        sa.Column('payment_method', sa.String(length=50), nullable=True),
        sa.Column('mercadopago_payment_id', sa.String(length=100), nullable=True),
        sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
        sa.PrimaryKeyConstraint('id')
    )
    
    # ### end Alembic commands ###
    
    # Crear índices para optimización
    op.create_index('idx_users_profiles_alias', 'users_profiles', ['alias'], unique=True)
    op.create_index('idx_users_profiles_uid', 'users_profiles', ['uid'], unique=True)
    op.create_index('idx_users_profiles_location', 'users_profiles', ['location'])
    op.create_index('idx_users_profiles_gender', 'users_profiles', ['gender'])
    op.create_index('idx_users_profiles_created_at', 'users_profiles', ['created_at'])
    op.create_index('idx_users_profiles_location_gender', 'users_profiles', ['location', 'gender'])
    
    op.create_index('idx_user_privacy_settings_user_id', 'user_privacy_settings', ['user_id'], unique=True)
    
    op.create_index('idx_user_purchases_user_id', 'user_purchases', ['user_id'])
    op.create_index('idx_user_purchases_status', 'user_purchases', ['status'])
    op.create_index('idx_user_purchases_created_at', 'user_purchases', ['created_at'])
    op.create_index('idx_user_purchases_user_status', 'user_purchases', ['user_id', 'status'])
    
    # Crear constraints de validación
    op.create_check_constraint('check_age_range', 'users_profiles', 'age >= 13 AND age <= 120')
    op.create_check_constraint('check_gender_values', 'users_profiles', "gender IN ('Masculino', 'Femenino', 'Otro')")
    op.create_check_constraint('check_location_values', 'users_profiles', "location IN ('Colombia', 'España', 'Otro')")
    op.create_check_constraint('check_avatar_type', 'users_profiles', "avatar_type IN ('icon', 'uploaded')")
    op.create_check_constraint('check_name_length', 'users_profiles', 'LENGTH(name) >= 2')
    op.create_check_constraint('check_alias_length', 'users_profiles', 'LENGTH(alias) >= 3')
    
    op.create_check_constraint('check_purchase_type', 'user_purchases', "purchase_type IN ('credits', 'product')")
    op.create_check_constraint('check_purchase_status', 'user_purchases', "status IN ('pending', 'approved', 'rejected', 'cancelled')")
    op.create_check_constraint('check_amount_positive', 'user_purchases', 'amount > 0')
    
    # Crear foreign keys
    op.create_foreign_key('fk_user_privacy_settings_user_id', 'user_privacy_settings', 'users_profiles', ['user_id'], ['id'])
    op.create_foreign_key('fk_user_purchases_user_id', 'user_purchases', 'users_profiles', ['user_id'], ['id'])

def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    
    # Eliminar foreign keys
    op.drop_constraint('fk_user_purchases_user_id', 'user_purchases', type_='foreignkey')
    op.drop_constraint('fk_user_privacy_settings_user_id', 'user_privacy_settings', type_='foreignkey')
    
    # Eliminar constraints
    op.drop_constraint('check_amount_positive', 'user_purchases', type_='check')
    op.drop_constraint('check_purchase_status', 'user_purchases', type_='check')
    op.drop_constraint('check_purchase_type', 'user_purchases', type_='check')
    
    op.drop_constraint('check_alias_length', 'users_profiles', type_='check')
    op.drop_constraint('check_name_length', 'users_profiles', type_='check')
    op.drop_constraint('check_avatar_type', 'users_profiles', type_='check')
    op.drop_constraint('check_location_values', 'users_profiles', type_='check')
    op.drop_constraint('check_gender_values', 'users_profiles', type_='check')
    op.drop_constraint('check_age_range', 'users_profiles', type_='check')
    
    # Eliminar índices
    op.drop_index('idx_user_purchases_user_status', table_name='user_purchases')
    op.drop_index('idx_user_purchases_created_at', table_name='user_purchases')
    op.drop_index('idx_user_purchases_status', table_name='user_purchases')
    op.drop_index('idx_user_purchases_user_id', table_name='user_purchases')
    
    op.drop_index('idx_user_privacy_settings_user_id', table_name='user_privacy_settings')
    
    op.drop_index('idx_users_profiles_location_gender', table_name='users_profiles')
    op.drop_index('idx_users_profiles_created_at', table_name='users_profiles')
    op.drop_index('idx_users_profiles_gender', table_name='users_profiles')
    op.drop_index('idx_users_profiles_location', table_name='users_profiles')
    op.drop_index('idx_users_profiles_uid', table_name='users_profiles')
    op.drop_index('idx_users_profiles_alias', table_name='users_profiles')
    
    # Eliminar tablas
    op.drop_table('user_purchases')
    op.drop_table('user_privacy_settings')
    op.drop_table('users_profiles')
    # ### end Alembic commands ### 